version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: interviewpro-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: interviewpro
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    command: >
      --default-authentication-plugin=mysql_native_password
      --max_connections=20
      --innodb_buffer_pool_size=128M
      --innodb_log_file_size=32M
      --key_buffer_size=16M
      --tmp_table_size=32M
      --max_heap_table_size=32M

  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 64M
        reservations:
          memory: 32M
    command: redis-server --maxmemory 64mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    command: ["gunicorn", "--bind", "0.0.0.0:5001", "--workers", "4", "--timeout", "120", "--access-logfile", "-", "--error-logfile", "-", "run_complete:app"]
    ports:
      - "8080:5001"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=mysql+pymysql://user:password@mysql:3306/interviewpro
      - JWT_SECRET_KEY=super-secret-jwt-key-for-production-e44a98f58724257596e5e14c0f04bcc9
      - CORS_ORIGINS=http://3.138.194.143,https://3.138.194.143,http://offerott.com,https://offerott.com,https://www.offerott.com
      - REDIS_URL=redis://redis:6379/0
      - UPLOAD_FOLDER=/app/uploads
      - LOG_LEVEL=INFO
      - SECRET_KEY=production-secret-key-8476febfb2364831d0570137745ca057
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
      - ./backend/instance:/app/instance
    restart: unless-stopped
    depends_on:
      - mysql
      - redis
    deploy:
      resources:
        limits:
          memory: 384M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./frontend/dist:/usr/share/nginx/html:ro
      - ./nginx/nginx-https.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: interviewpro-network
